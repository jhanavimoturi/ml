#Week 6(Write a program to implement k-fold cross-validation using k-NN classifiers. Measure accuracy, recall, precision. Draw RoC.)

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
plt.style.use('ggplot')

#insert file of diabetes.csv
df = pd.read_csv("diabetes.csv")

X = df.drop('Outcome',axis=1).values
y = df['Outcome'].values

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.4,random_state=42, stratify=y)

from sklearn.neighbors import KNeighborsClassifier
neighbors = np.arange(1,9)
train_accuracy =np.empty(len(neighbors))
test_accuracy = np.empty(len(neighbors))

for i,k in enumerate(neighbors):
  knn = KNeighborsClassifier(n_neighbors=k)

knn.fit(X_train, y_train)

train_accuracy[i] = knn.score(X_train, y_train)
test_accuracy[i] = knn.score(X_test, y_test)
